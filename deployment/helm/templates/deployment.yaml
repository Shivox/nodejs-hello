apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nodejs-hello.fullname" . }}
  labels:
    {{- include "nodejs-hello.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "nodejs-hello.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "nodejs-hello.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nodejs-hello.serviceAccountName" . }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "DB_HOSTNAME"
              value: "nodejs-hello-mysql.default.svc.cluster.local"
            - name: "DB_USERNAME"
              value: {{ .Values.mysql.mysqlUser }}
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key:  mysql-password
                  name: {{ include "nodejs-hello.fullname" . }}-mysql
            - name: "DB_NAME"
              value: {{ .Values.mysql.mysqlDatabase }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http